use lazy_regex::regex;
use lazy_static::lazy_static;

use crate::definition::{觸鍵方式, 輸入方案定義, 轉寫法定義, 鍵位定義};
use crate::gear::layout::{
    上檔盤面, 基本盤面, 大寫字母盤面, 盤面定義, 盤面選擇碼, 配列, 鍵盤佈局, 鍵面刻印,
};
use crate::key_code::KeyCode;
use crate::spelling_algebra::拼寫運算;
use crate::{盤面, 變換, 鍵面};

macro_rules! 鍵位 {
    ($輸入碼: ident => $鍵碼: path) => {
        鍵位定義 {
            輸入碼: stringify!($輸入碼),
            鍵碼: $鍵碼,
        }
    };
}

const 並擊鍵序: &[鍵位定義] = &[
    鍵位!(心 => KeyCode::S),
    鍵位!(清 => KeyCode::W),
    鍵位!(精 => KeyCode::X),
    鍵位!(曉 => KeyCode::D),
    鍵位!(來 => KeyCode::E),
    鍵位!(非 => KeyCode::C),
    鍵位!(見 => KeyCode::F),
    鍵位!(端 => KeyCode::R),
    鍵位!(幫 => KeyCode::V),
    鍵位!(溪 => KeyCode::G),
    鍵位!(透 => KeyCode::T),
    鍵位!(滂 => KeyCode::B),
    鍵位!(家 => KeyCode::Space),
    鍵位!(齊 => KeyCode::J),
    鍵位!(魚 => KeyCode::U),
    鍵位!(支 => KeyCode::M),
    鍵位!(車 => KeyCode::L),
    鍵位!(歌 => KeyCode::O),
    鍵位!(庚 => KeyCode::K),
    鍵位!(真 => KeyCode::I),
    鍵位!(侵 => KeyCode::Comma),
];

lazy_static! {
    static ref 並擊碼表示: Box<[拼寫運算::<'static>]> = Box::new([
        變換!("精非幫", "微"),
        變換!("非幫", "明"),
        變換!("來端", "泥"),
        變換!("心曉見", "日"),
        變換!("曉見", "疑"),
        變換!("精非", "照"),
        變換!("清來", "穿"),
        變換!("心曉", "審"),
        變換!("^([家齊魚支庚真侵車歌])", "影$1"),
        變換!("魚庚", "東"),
        變換!("家庚", "江"),
        變換!("家真", "寒"),
        變換!("車真", "先"),
        變換!("歌真", "桓"),
        變換!("車侵", "廉"),
        變換!("家侵", "監"),
        變換!("家齊", "皆"),
        變換!("家魚", "蕭"),
        變換!("魚歌", "尤"),
    ]);
    static ref 並擊碼鍵位: Box<[拼寫運算<'static>]> = Box::new([
        變換!("微", "精非幫"),
        變換!("明", "非幫"),
        變換!("泥", "來端"),
        變換!("疑", "曉見"),
        變換!("照", "精非"),
        變換!("穿", "清來"),
        變換!("日", "心曉見"),
        變換!("審", "心曉"),
        變換!("影", ""),
        變換!("東", "魚庚"),
        變換!("江", "家庚"),
        變換!("寒", "家真"),
        變換!("先", "車真"),
        變換!("桓", "歌真"),
        變換!("廉", "車侵"),
        變換!("監", "家侵"),
        變換!("皆", "家齊"),
        變換!("蕭", "家魚"),
        變換!("尤", "魚歌"),
    ]);
}

const 近古漢語拼音盤面: 盤面定義<'static> = 盤面![
    [ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ],
    [ 空 清 來 端 透 空 魚 真 歌 空 _ _ ],
    [ 空 心 曉 見 溪 空 齊 庚 車 空 _ ],
    [ 空 精 非 幫 滂 空 支 侵 空 空 ],
    [ 家 _ 家 ]
];

const 近古漢語並擊佈局: 鍵盤佈局 = 鍵盤佈局 {
    盤面: &[基本盤面, 上檔盤面, 大寫字母盤面, 近古漢語拼音盤面],
    默認盤面: 盤面選擇碼(4),
    首選配列: 配列::正交直列,
};

pub fn 近古漢語輸入方案() -> 輸入方案定義<'static> {
    輸入方案定義 {
        名稱: "近古漢語",
        佈局: &近古漢語並擊佈局,
        指法: 觸鍵方式::並擊,
        字根表: 並擊鍵序,
        轉寫法: 轉寫法定義 {
            輸入碼表示: &並擊碼表示,
            輸入碼鍵位: &並擊碼鍵位,
            拼式轉寫規則: &[],
            字根拆分規則: &[],
            拼式驗證規則: &[],
        },
    }
}
