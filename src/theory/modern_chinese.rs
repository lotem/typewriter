use lazy_regex::regex;
use lazy_static::lazy_static;

use crate::definition::{觸鍵方式, 輸入方案定義, 轉寫法定義, 鍵位定義};
use crate::gear::layout::{
    上檔盤面, 基本盤面, 大寫字母盤面, 盤面定義, 盤面選擇碼, 配列, 鍵盤佈局, 鍵面刻印,
};
use crate::key_code::KeyCode;
use crate::spelling_algebra::拼寫運算;
use crate::{盤面, 變換, 鍵面, 轉寫};

macro_rules! 鍵位 {
    ($輸入碼: ident => $鍵碼: path) => {
        鍵位定義 {
            輸入碼: stringify!($輸入碼),
            鍵碼: $鍵碼,
        }
    };
}

const 並擊鍵序: &[鍵位定義] = &[
    鍵位!(心 => KeyCode::S),
    鍵位!(清 => KeyCode::W),
    鍵位!(精 => KeyCode::X),
    鍵位!(曉 => KeyCode::D),
    鍵位!(來 => KeyCode::E),
    鍵位!(非 => KeyCode::C),
    鍵位!(見 => KeyCode::F),
    鍵位!(端 => KeyCode::R),
    鍵位!(幫 => KeyCode::V),
    鍵位!(溪 => KeyCode::G),
    鍵位!(透 => KeyCode::T),
    鍵位!(滂 => KeyCode::B),
    鍵位!(齊 => KeyCode::J),
    鍵位!(模 => KeyCode::U),
    鍵位!(魚 => KeyCode::M),
    鍵位!(麻 => KeyCode::Space),
    鍵位!(痕 => KeyCode::K),
    鍵位!(支 => KeyCode::I),
    鍵位!(歌 => KeyCode::L),
    鍵位!(波 => KeyCode::O),
];

lazy_static! {
    static ref 並擊碼表示: Box<[拼寫運算::<'static>]> = Box::new([
        變換!("非幫", "明"),
        變換!("來端", "泥"),
        變換!("精非", "照"),
        變換!("清來", "穿"),
        變換!("心曉", "審"),
        變換!("曉見", "日"),
        變換!("^([齊模魚麻痕支歌波])", "影$1"),
        變換!("([齊魚])歌", "${1}皆"),
        變換!("模麻支波", "唐合"),
        變換!("麻痕歌", "唐"),
        變換!("痕歌", "庚"),
        變換!("齊支波", "東齊"),
        變換!("模支波", "東"),
        變換!("麻痕", "寒"),
        變換!("麻支", "開"),
        變換!("模支$", "微合"),
        變換!("支歌", "微"),
        變換!("麻波", "豪"),
        變換!("齊支$", "侯齊"),
        變換!("支波", "侯"),
        變換!("影支$", "影兒"),
        變換!("齊(.+)$", "${1}齊"),
        變換!("模(.+)$", "${1}合"),
        變換!("魚(.+)$", "${1}撮"),
        變換!("^([精清心照穿審日])$", "$1支"),
    ]);
    static ref 並擊碼鍵位: Box<[拼寫運算<'static>]> = Box::new([
        變換!("^([精清心照穿審日])支$", "$1"),
        變換!("明", "非幫"),
        變換!("泥", "來端"),
        變換!("照", "精非"),
        變換!("穿", "清來"),
        變換!("審", "心曉"),
        變換!("日", "曉見"),
        變換!("影", ""),
        變換!("唐合", "模麻支波"),
        變換!("唐", "麻痕歌"),
        變換!("庚", "痕歌"),
        變換!("東齊", "齊支波"),
        變換!("東", "模支波"),
        變換!("寒", "麻痕"),
        變換!("開", "麻支"),
        變換!("微合", "模支"),
        變換!("微", "支歌"),
        變換!("豪", "麻波"),
        變換!("侯齊", "齊支"),
        變換!("侯", "支波"),
        轉寫!("兒皆", "支歌"),
        變換!("([麻痕支歌波]+)齊$", "齊$1"),
        變換!("([麻痕支歌波]+)合$", "模$1"),
        變換!("([麻痕支歌波]+)撮$", "魚$1"),
    ]);
}

const 現代漢語拼音盤面: 盤面定義<'static> = 盤面![
    [ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ],
    [ 空 清 來 端 透 空 模 支 波 空 _ _ ],
    [ 空 心 曉 見 溪 空 齊 痕 歌 空 _ ],
    [ 空 精 非 幫 滂 空 魚 空 空 空 ],
    [ 麻 _ 麻 ]
];

const 現代漢語並擊佈局: 鍵盤佈局 = 鍵盤佈局 {
    盤面: &[基本盤面, 上檔盤面, 大寫字母盤面, 現代漢語拼音盤面],
    默認盤面: 盤面選擇碼(4),
    首選配列: 配列::正交直列,
};

pub fn 現代漢語輸入方案() -> 輸入方案定義<'static> {
    輸入方案定義 {
        名稱: "現代漢語",
        佈局: &現代漢語並擊佈局,
        指法: 觸鍵方式::並擊,
        字根表: 並擊鍵序,
        轉寫法: 轉寫法定義 {
            輸入碼表示: &並擊碼表示,
            輸入碼鍵位: &並擊碼鍵位,
            拼式轉寫規則: &[],
            字根拆分規則: &[],
            拼式驗證規則: &[],
        },
    }
}
