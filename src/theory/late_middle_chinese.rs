use lazy_regex::regex;
use lazy_static::lazy_static;

use crate::definition::{觸鍵方式, 輸入方案定義, 轉寫法定義, 鍵位定義};
use crate::gear::layout::{
    上檔盤面, 基本盤面, 大寫字母盤面, 盤面定義, 盤面選擇碼, 配列, 鍵盤佈局, 鍵面刻印,
};
use crate::key_code::KeyCode;
use crate::spelling_algebra::拼寫運算;
use crate::{盤面, 變換, 鍵面};

macro_rules! 鍵位 {
    ($輸入碼: ident => $鍵碼: path) => {
        鍵位定義 {
            輸入碼: stringify!($輸入碼),
            鍵碼: $鍵碼,
        }
    };
}

const 並擊鍵序: &[鍵位定義] = &[
    鍵位!(心 => KeyCode::S),
    鍵位!(清 => KeyCode::W),
    鍵位!(精 => KeyCode::X),
    鍵位!(曉 => KeyCode::D),
    鍵位!(來 => KeyCode::E),
    鍵位!(非 => KeyCode::C),
    鍵位!(見 => KeyCode::F),
    鍵位!(端 => KeyCode::R),
    鍵位!(幫 => KeyCode::V),
    鍵位!(溪 => KeyCode::G),
    鍵位!(透 => KeyCode::T),
    鍵位!(滂 => KeyCode::B),
    鍵位!(氣 => KeyCode::A),
    鍵位!(果 => KeyCode::Space),
    鍵位!(止 => KeyCode::J),
    鍵位!(流 => KeyCode::U),
    鍵位!(假 => KeyCode::L),
    鍵位!(遇 => KeyCode::O),
    鍵位!(曾 => KeyCode::K),
    鍵位!(臻 => KeyCode::I),
    鍵位!(深 => KeyCode::Comma),
    鍵位!(入 => KeyCode::Semicolon),
    鍵位!(上 => KeyCode::P),
    鍵位!(去 => KeyCode::Slash),
];

lazy_static! {
    static ref 並擊碼表示: Box<[拼寫運算::<'static>]> = Box::new([
        變換!("幫氣", "並"),
        變換!("精非幫", "微"),
        變換!("非幫", "明"),
        變換!("非滂", "敷"),
        變換!("非氣", "奉"),
        變換!("端氣", "定"),
        變換!("清來端", "娘"),
        變換!("來端", "泥"),
        變換!("清端", "知"),
        變換!("清透氣", "澄"),
        變換!("清透", "徹"),
        變換!("清氣", "從"),
        變換!("心氣", "邪"),
        變換!("精非", "照"),
        變換!("清來氣", "牀"),
        變換!("清來", "穿"),
        變換!("心曉見", "日"),
        變換!("心曉氣", "禪"),
        變換!("心曉", "審"),
        變換!("見氣", "羣"),
        變換!("曉見", "疑"),
        變換!("曉氣", "匣"),
        變換!("來氣", "喻"),
        變換!("^([果止流假遇曾臻深上去入])", "影$1"),
        變換!("果止", "蟹"),
        變換!("果流", "效"),
        變換!("果深", "咸"),
        變換!("果臻", "山"),
        變換!("果曾", "宕"),
        變換!("遇曾", "江"),
        變換!("止曾", "梗"),
        變換!("流曾", "通"),
    ]);
    static ref 並擊碼鍵位: Box<[拼寫運算<'static>]> = Box::new([
        變換!("並", "幫氣"),
        變換!("微", "精非幫"),
        變換!("明", "非幫"),
        變換!("敷", "非滂"),
        變換!("奉", "非氣"),
        變換!("定", "端氣"),
        變換!("娘", "清來端"),
        變換!("泥", "來端"),
        變換!("知", "清端"),
        變換!("澄", "清透氣"),
        變換!("徹", "清透"),
        變換!("從", "清氣"),
        變換!("邪", "心氣"),
        變換!("照", "精非"),
        變換!("牀", "清來氣"),
        變換!("穿", "清來"),
        變換!("日", "心曉見"),
        變換!("禪", "心曉氣"),
        變換!("審", "心曉"),
        變換!("羣", "見氣"),
        變換!("疑", "曉見"),
        變換!("匣", "曉氣"),
        變換!("喻", "來氣"),
        變換!("影", ""),
        變換!("蟹", "果止"),
        變換!("效", "果流"),
        變換!("咸", "果深"),
        變換!("山", "果臻"),
        變換!("宕", "果曾"),
        變換!("江", "遇曾"),
        變換!("梗", "止曾"),
        變換!("通", "流曾"),
    ]);
}

const 晚期中古漢語拼音盤面: 盤面定義<'static> = 盤面![
    [ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ],
    [ 空 清 來 端 透 空 流 臻 遇 上 _ _ ],
    [ 氣 心 曉 見 溪 空 止 曾 假 入 _ ],
    [ 空 精 非 幫 滂 空 空 深 空 去 ],
    [ 果 _ 果 ]
];

const 晚期中古漢語並擊佈局: 鍵盤佈局 = 鍵盤佈局 {
    盤面: &[基本盤面, 上檔盤面, 大寫字母盤面, 晚期中古漢語拼音盤面],
    默認盤面: 盤面選擇碼(4),
    首選配列: 配列::正交直列,
};

pub fn 晚期中古漢語輸入方案() -> 輸入方案定義<'static> {
    輸入方案定義 {
        名稱: "晚期中古漢語",
        佈局: &晚期中古漢語並擊佈局,
        指法: 觸鍵方式::並擊,
        字根表: 並擊鍵序,
        轉寫法: 轉寫法定義 {
            輸入碼表示: &並擊碼表示,
            輸入碼鍵位: &並擊碼鍵位,
            拼式轉寫規則: &[],
            字根拆分規則: &[],
            拼式驗證規則: &[],
        },
    }
}
