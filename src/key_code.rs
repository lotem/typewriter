use keyberon::key_code::KeyCode;

pub fn 網頁鍵值轉換(鍵值: &str) -> KeyCode {
    match 鍵值 {
        "KeyA" => KeyCode::A,
        "KeyB" => KeyCode::B,
        "KeyC" => KeyCode::C,
        "KeyD" => KeyCode::D,
        "KeyE" => KeyCode::E,
        "KeyF" => KeyCode::F,
        "KeyG" => KeyCode::G,
        "KeyH" => KeyCode::H,
        "KeyI" => KeyCode::I,
        "KeyJ" => KeyCode::J,
        "KeyK" => KeyCode::K,
        "KeyL" => KeyCode::L,
        "KeyM" => KeyCode::M,
        "KeyN" => KeyCode::N,
        "KeyO" => KeyCode::O,
        "KeyP" => KeyCode::P,
        "KeyQ" => KeyCode::Q,
        "KeyR" => KeyCode::R,
        "KeyS" => KeyCode::S,
        "KeyT" => KeyCode::T,
        "KeyU" => KeyCode::U,
        "KeyV" => KeyCode::V,
        "KeyW" => KeyCode::W,
        "KeyX" => KeyCode::X,
        "KeyY" => KeyCode::Y,
        "KeyZ" => KeyCode::Z,
        "Digit0" => KeyCode::Kb0,
        "Digit1" => KeyCode::Kb1,
        "Digit2" => KeyCode::Kb2,
        "Digit3" => KeyCode::Kb3,
        "Digit4" => KeyCode::Kb4,
        "Digit5" => KeyCode::Kb5,
        "Digit6" => KeyCode::Kb6,
        "Digit7" => KeyCode::Kb7,
        "Digit8" => KeyCode::Kb8,
        "Digit9" => KeyCode::Kb9,
        "Semicolon" => KeyCode::SColon,
        "Comma" => KeyCode::Comma,
        "Period" => KeyCode::Dot,
        "Slash" => KeyCode::Slash,
        "Backquote" => KeyCode::Grave,
        "Quote" => KeyCode::Quote,
        "Minus" => KeyCode::Minus,
        "Equal" => KeyCode::Equal,
        "BracketLeft" => KeyCode::LBracket,
        "BracketRight" => KeyCode::RBracket,
        "Backslash" => KeyCode::Bslash,
        "Space" => KeyCode::Space,
        "Escape" => KeyCode::Escape,
        "Tab" => KeyCode::Tab,
        "Backspace" => KeyCode::BSpace,
        "Enter" => KeyCode::Enter,
        _ => KeyCode::No,
    }
}
